{"version":3,"sources":["components/Month/Month.module.scss","components/AndamentoMensile/AndamentoMensile.module.scss","components/MonthsList/MonthsList.module.scss","components/Month/index.js","components/MonthsList/index.js","components/AndamentoMensile/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","box","selecting","selected","upSection","monthName","bottomSection","textsBlock","textDocuments","textImporto","capacityLevel","andamentoMensile","h1","statusMessage","list","Month","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","timeoutId","setTimeout","setState","animated","bind","assertThisInitialized","clearTimeout","prevProps","documenti","importo","monthNumber","capacity","status","isFirstInSelection","isLastInSelection","_","extend","monthsList","length","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","styles","react_default","a","createElement","className","getStatus","join","onPointerDown","onMouseDown","getMonthName","height","getCapacity","getFormattedImporto","React","Component","SelectableMonth","createSelectable","_ref","selectableRef","month","index","ref","Month_Month","key","MonthsList","handleSelecting","handleSelected","months","slice","JSON","stringify","monthsMaxImporto","max","m","lib","window","selectableGroup","enableDeselect","mixedDeselect","resetOnStart","duringSelection","onSelectionFinish","map","AndamentoMensile","_this2","fetch","then","response","json","data","mesi","selectingItems","stateMessage","selectedItems","MonthsList_MonthsList","App","AndamentoMensile_AndamentoMensile","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59145cf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Month_box__6pdkm\",\"selecting\":\"Month_selecting__2INPc\",\"selected\":\"Month_selected__1EHrR\",\"upSection\":\"Month_upSection__3rVvw\",\"monthName\":\"Month_monthName__3ITeA\",\"bottomSection\":\"Month_bottomSection__2LMbG\",\"textsBlock\":\"Month_textsBlock__3sQgM\",\"textDocuments\":\"Month_textDocuments__1CHmK\",\"textImporto\":\"Month_textImporto__2EEhA\",\"capacityLevel\":\"Month_capacityLevel__11Ozp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"andamentoMensile\":\"AndamentoMensile_andamentoMensile__RKWEQ\",\"h1\":\"AndamentoMensile_h1__30qJ_\",\"statusMessage\":\"AndamentoMensile_statusMessage__3872y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MonthsList_list__8Hdn2\"};","import React    from 'react';\nimport _        from 'underscore';\nimport styles   from './Month.module.scss';\n\nclass Month extends React.Component {\n    \n    static get monthsList() { \n        return [\n            'Gennaio',\n            'Febbraio',\n            'Marzo',\n            'Aprile',\n            'Maggio',\n            'Giugno',\n            'Luglio',\n            'Agosto',\n            'Settembre',\n            'Ottobre',\n            'Novembre',\n            'Dicembre'\n        ]; \n    }\n\n\tconstructor(props) {\n        super(props);\n        this.state = props;\n        this.timeoutId = setTimeout(function () {\n            this.setState({animated: true});\n        }.bind(this), 300);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timeoutId);\n    }\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (\n            prevProps.documenti                 !== this.props.documenti        || \n            prevProps.importo                   !== this.props.importo          || \n            prevProps.monthNumber               !== this.props.monthNumber      ||\n            prevProps.capacity                  !== this.props.capacity         ||\n            prevProps.status                    !== this.props.status                       ||\n            prevProps.isFirstInSelection        !== this.props.isFirstInSelection           ||\n            prevProps.isLastInSelection         !== this.props.isLastInSelection\n        ) {\n\t\t\tthis.setState(_.extend({},this.props));\n\t\t}\n    }\n\n    getMonthName() {\n        if(this.state.monthNumber>0 && this.state.monthNumber<Month.monthsList.length+1)\n        {\n            return Month.monthsList[this.state.monthNumber-1];\n        }\n        else\n        {\n            return '';\n        }\n    }\n\n\tgetFormattedImporto() {\n\t\treturn new Intl.NumberFormat('it-IT', {\n\t\t\tstyle: 'currency',\n            currency: 'EUR',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2\n\t\t}).format(this.state.importo);\n    }\n\n    getCapacity() {\n        if(this.state.capacity>100)\n            return 100;\n        if(this.state.capacity<0)\n            return 0;\n        return !this.state.animated ? 0 : this.state.capacity;\n    }\n\n    getStatus() {\n        let status = '';\n        switch(this.state.status) {\n            case 0: status = ''; break;\n            case 1: status = styles.selecting; break;\n            case 2: status = styles.selected; break;\n            default: status = '';\n        }\n        return status;\n    }\n\n\trender() {\n\t\treturn (\n            <div className={[styles.box, this.getStatus()].join(' ')} onPointerDown={this.onMouseDown}>\n                <div className={styles.upSection}>\n                    <div className={styles.monthName}>{this.getMonthName()}</div>\n                </div>\n                <div className={styles.bottomSection}>\n                    <div className={styles.capacityLevel} style={{height: this.getCapacity()+'%'}}/>\n                    <div className={styles.textsBlock}>\n                        <div className={styles.textDocuments}>{this.state.documenti} doc.</div>\n                        <div className={styles.textImporto}>{this.getFormattedImporto()}</div>\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport { Month as default };\n","import React, { Component } from 'react';\nimport _ \t\tfrom 'underscore';\nimport Month \tfrom '../Month';\nimport styles   from './MonthsList.module.scss';\nimport { SelectableGroup, createSelectable } from 'react-selectable-fast';\n\nconst SelectableMonth = createSelectable(({ selectableRef, selected, selecting, month, capacity, index}) => (\n\t<div ref={selectableRef}>\n\t\t<Month\n\t\t\tdocumenti={month.documenti}\n\t\t\timporto={month.importo}\n\t\t\tmonthNumber={index + 1}\n\t\t\tkey={selectableRef}\n\t\t\tcapacity={capacity}\n\t\t\tstatus={selecting ? 1 : (selected ? 2 : 0)}\n\t\t/>\n\t</div>\n));\n\nclass MonthsList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleSelecting \t= props.handleSelecting;\n\t\tthis.handleSelected \t= props.handleSelected;\n\t\tthis.state = {\n\t\t\tmonths: props.months.slice(0, 12)\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif(JSON.stringify(prevProps) !== JSON.stringify(this.props))\n\t\t{\n\t\t\tthis.setState({months : this.props.months.slice(0,12)});\n\t\t}\n\t}\n\n\trender() {\n\t\tvar monthsMaxImporto = _.max(this.state.months, m => m.importo).importo;\n\t\treturn (\n\t\t\t<SelectableGroup\n\t\t\tref={ref => (window.selectableGroup = ref)}\n\t\t\tclassName={styles.list}\n\t\t\tenableDeselect={true}\n\t\t\tmixedDeselect={true}\n\t\t\tresetOnStart={true}\n\t\t\tduringSelection={this.handleSelecting}\n\t\t\tonSelectionFinish={this.handleSelected}>\n\t\t\t\t{this.state.months.map((month, index) => (\n\t\t\t\t\t<SelectableMonth\n\t\t\t\t\t\tkey={index + 1}\n\t\t\t\t\t\tmonth={month}\n\t\t\t\t\t\tcapacity={month.importo * 100 / monthsMaxImporto}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</SelectableGroup>\n\t\t);\n\t}\n}\n\nexport { MonthsList as default };\n","import React \t\tfrom 'react';\nimport MonthsList \tfrom '../MonthsList/';\nimport styles   \tfrom './AndamentoMensile.module.scss';\n\nclass AndamentoMensile extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmonths: []\n\t\t};\n\t\tthis.handleSelecting \t= this.handleSelecting.bind(this);\n\t\tthis.handleSelected \t= this.handleSelected.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tfetch('http://staccah.fattureincloud.it/testfrontend/data.json')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({ months: data.mesi }));\n\t}\n\thandleSelecting(selectingItems) {\n\t\tif(selectingItems.length>1)\n\t\t{\n\t\t\tthis.setState({\n\t\t\t\tstateMessage : 'Rilascia il mouse per completare la selezione'\n\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(selectingItems.length===1) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tstateMessage : 'Trascina per selezionare un intervallo di mesi'\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSelected(selectedItems) {\n\t\tthis.setState({\n\t\t\tstateMessage : ''\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.andamentoMensile}>\n\t\t\t\t<h1 className={styles.h1}>Andamento mensile</h1>\n\t\t\t\t<MonthsList months={this.state.months} handleSelecting={this.handleSelecting} handleSelected={this.handleSelected} />\n\t\t\t\t<div className={styles.statusMessage}>{this.state.stateMessage}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { AndamentoMensile as default };\n","import React, { Component } from 'react';\nimport AndamentoMensile from './components/AndamentoMensile';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AndamentoMensile />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}